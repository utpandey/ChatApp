[{"/home/utsavpandey8/EMOH/ChatApp/client/src/index.js":"1","/home/utsavpandey8/EMOH/ChatApp/client/src/App.js":"2","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Register.js":"3","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/apollo/ApolloProvider.js":"4","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/Queries.js":"5","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Login.js":"6","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/context/auth.js":"7","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/utils/DynamicRoute.js":"8","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Home.js":"9","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Users.js":"10","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Messages.js":"11","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Message.js":"12","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/context/message.js":"13"},{"size":231,"mtime":1608730726092,"results":"14","hashOfConfig":"15"},{"size":1108,"mtime":1608799755646,"results":"16","hashOfConfig":"15"},{"size":3238,"mtime":1608737528138,"results":"17","hashOfConfig":"15"},{"size":850,"mtime":1608748521404,"results":"18","hashOfConfig":"15"},{"size":1288,"mtime":1608797954233,"results":"19","hashOfConfig":"15"},{"size":2412,"mtime":1608746424682,"results":"20","hashOfConfig":"15"},{"size":1516,"mtime":1608747959466,"results":"21","hashOfConfig":"15"},{"size":502,"mtime":1608747915766,"results":"22","hashOfConfig":"15"},{"size":903,"mtime":1608799623410,"results":"23","hashOfConfig":"15"},{"size":1842,"mtime":1608799889027,"results":"24","hashOfConfig":"15"},{"size":1953,"mtime":1608799717740,"results":"25","hashOfConfig":"15"},{"size":1072,"mtime":1608799587118,"results":"26","hashOfConfig":"15"},{"size":1463,"mtime":1608799691043,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pq9q52",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/utsavpandey8/EMOH/ChatApp/client/src/index.js",[],["56","57"],"/home/utsavpandey8/EMOH/ChatApp/client/src/App.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Register.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/apollo/ApolloProvider.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/Queries.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Login.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/context/auth.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/utils/DynamicRoute.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Home.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Users.js",["58"],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Messages.js",["59","60"],"import React, { Fragment, useEffect } from 'react'\nimport { gql, useLazyQuery } from '@apollo/client'\nimport { Col } from 'react-bootstrap'\n\nimport { useMessageDispatch, useMessageState } from '../../context/message'\n\nimport Message from './Message'\n\nconst GET_MESSAGES = gql`\n  query getMessages($from: String!) {\n    getMessages(from: $from) {\n      uuid\n      from\n      to\n      content\n      createdAt\n    }\n  }\n`\n\nexport default function Messages() {\n  const { users } = useMessageState()\n  const dispatch = useMessageDispatch()\n\n  const selectedUser = users?.find((u) => u.selected === true)\n  const messages = selectedUser?.messages\n\n  const [\n    getMessages,\n    { loading: messagesLoading, data: messagesData },\n  ] = useLazyQuery(GET_MESSAGES)\n\n  useEffect(() => {\n    if (selectedUser && !selectedUser.messages) {\n      getMessages({ variables: { from: selectedUser.username } })\n    }\n  }, [selectedUser])\n\n  useEffect(() => {\n    if (messagesData) {\n      dispatch({\n        type: 'SET_USER_MESSAGES',\n        payload: {\n          username: selectedUser.username,\n          messages: messagesData.getMessages,\n        },\n      })\n    }\n  }, [messagesData])\n\n  let selectedChatMarkup\n  if (!messages && !messagesLoading) {\n    selectedChatMarkup = <p>Select a friend</p>\n  } else if (messagesLoading) {\n    selectedChatMarkup = <p>Loading..</p>\n  } else if (messages.length > 0) {\n    selectedChatMarkup = messages.map((message, index) => (\n      <Fragment key={message.uuid}>\n        <Message message={message} />\n        {index === messages.length - 1 && (\n          <div className=\"invisible\">\n            <hr className=\"m-0\" />\n          </div>\n        )}\n      </Fragment>\n    ))\n  } else if (messages.length === 0) {\n    selectedChatMarkup = <p>You are now connected! send your first message!</p>\n  }\n\n  return (\n    <Col xs={10} md={8} className=\"messages-box d-flex flex-column-reverse\">\n      {selectedChatMarkup}\n    </Col>\n  )\n}","/home/utsavpandey8/EMOH/ChatApp/client/src/Components/pages/Home/Message.js",[],"/home/utsavpandey8/EMOH/ChatApp/client/src/Components/context/message.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":15,"nodeType":"67","messageId":"68","endLine":3,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":37,"column":6,"nodeType":"71","endLine":37,"endColumn":20,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":49,"column":6,"nodeType":"71","endLine":49,"endColumn":20,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUser.username'. Either include them or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"83","text":"84"},"Update the dependencies array to be: [dispatch, messagesData, selectedUser.username]",{"range":"85","text":"86"},[904,918],"[getMessages, selectedUser]",[1156,1170],"[dispatch, messagesData, selectedUser.username]"]